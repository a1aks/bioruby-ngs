module Bio
	module Ngs
		module Bcftools

			#Usage: bcftools view [options] <in.bcf> [reg]

			#Input/output options:

			 #      -A        keep all possible alternate alleles at variant sites
			 #     -b        output BCF instead of VCF
			 #      -D FILE   sequence dictionary for VCF->BCF conversion [null]
			 #      -F        PL generated by r921 or before (which generate old ordering)
			 #      -G        suppress all individual genotype information
			 #      -l FILE   list of sites (chr pos) or regions (BED) to output [all sites]
			 #      -L        calculate LD for adjacent sites
			 #      -N        skip sites where REF is not A/C/G/T
			 #      -Q        output the QCALL likelihood format
			 #      -s FILE   list of samples to use [all samples]
			 #      -S        input is VCF
			 #      -u        uncompressed BCF output (force -b)

			#Consensus/variant calling options:

			 #      -c        SNP calling (force -e)
			 #      -d FLOAT  skip loci where less than FLOAT fraction of samples covered [0]
			 #      -e        likelihood based analyses
			 #      -g        call genotypes at variant sites (force -c)
			 #      -i FLOAT  indel-to-substitution ratio [-1]
			 #      -I        skip indels
			 #      -p FLOAT  variant if P(ref|D)<FLOAT [0.5]
			 #      -P STR    type of prior: full, cond2, flat [full]
			 #      -t FLOAT  scaled substitution mutation rate [0.001]
			 #      -T STR    constrained calling; STR can be: pair, trioauto, trioxd and trioxs (see manual) [null]
			 #      -v        output potential variant sites only (force -c)

			#Contrast calling and association test options:

			 #      -1 INT    number of group-1 samples [0]
			 #      -C FLOAT  posterior constrast for LRT<FLOAT and P(ref|D)<0.5 [1]
			 #      -U INT    number of permutations for association testing (effective with -1) [0]
			 #      -X FLOAT  only perform permutations for P(chi^2)<FLOAT [0.01]
			 class View
			 	include Bio::Command::Wrapper	
			 	set_program Bio::Ngs::Utils.binary("bcftools")
			 	set_sub_program "view"
			 	use_aliases
			 	add_option :alternate, :type => :boolean, :aliases => "-A", :desc => "keep all possible alternate alleles at variant sites"
			 	add_option :bcfout, :type => :boolean, :aliases => "-b", :desc => "output BCF instead of VCF"
			 	add_option :dictionary, :type => :string, :aliases => "-D", :desc => "sequence dictionary for VCF->BCF conversion [null]"
			 	add_option :suppress_genotype, :type => :boolean, :aliases => "-G", :desc => "suppress all individual genotype information"
			 	add_option :positions, :type => :string, :aliases => "-l", :desc => "list of sites (chr pos) or regions (BED) to output [all sites]"
			 	add_option :ld, :type => :boolean, :aliases => "-L", :desc => "calculate LD for adjacent sites"
			 	add_option :skipN, :type => :boolean, :aliases => "-N", :desc => "skip sites where REF is not A/C/G/T"
			 	add_option :qcall, :type => :boolean, :aliases => "-Q", :desc => "output the QCALL likelihood format"
			 	add_option :samples, :type => :string, :aliases => "-s", :desc => "list of samples to use [all samples]"
			 	add_option :vcfinput, :type => :boolean, :aliases => "-S", :desc => "input is VCF"
			 	add_option :uncompressed, :type => :boolean, :aliases => "-u", :desc => "uncompressed BCF output (force -b)"
			 	add_option :snpcall, :type => :boolean, :aliases => "-c", :desc => "SNP calling (force -e)"
			 	add_option :skiploci, :type => :numeric, :aliases => "-d", :desc => "skip loci where less than FLOAT fraction of samples covered [0]"
			 	add_option :likelihood, :type => :boolean, :aliases => "-e", :desc => "likelihood based analyses"
			 	add_option :callgenotype, :type => :boolean, :aliases => "-g", :desc => "call genotypes at variant sites (force -c)"
			 	add_option :indelratio, :type => :numeric, :aliases => "-i", :desc => "indel-to-substitution ratio [-1]"
			 	add_option :skipindels, :type => :boolean, :aliases => "-I", :desc => "skip indels"
			 	add_option :variant_probability, :type => :numeric, :aliases => "-p", :desc => "variant if P(ref|D)<FLOAT [0.5]"
			 	add_option :prior_type, :type => :string, :aliases => "-P", :desc => "type of prior: full, cond2, flat [full]"
			 	add_option :substitution_mutation_rate, :type => :numeric, :aliases => "-t", :desc => "scaled substitution mutation rate [0.001]"
			 	add_option :contrained_calling, :type => :string, :aliases => "-T", :desc => "constrained calling; STR can be: pair, trioauto, trioxd and trioxs (see manual) [null]"
			 	add_option :variant_sites, :type => :boolean, :aliases => "-v", :desc => "output potential variant sites only (force -c)"
			 	add_option :group1, :type => :numeric, :aliases => "-1", :desc => "number of group-1 samples [0]"
			 	add_option :posterior_contrast, :type => :numeric, :aliases => "-C", :desc => "posterior constrast for LRT<FLOAT and P(ref|D)<0.5 [1]"
			 	add_option :association_permutations, :type => :numeric, :aliases => "-U", :desc => "number of permutations for association testing (effective with -1) [0]"
			 	add_option :permutations_cutoff, :type => :numeric, :aliases => "-X", :desc => "only perform permutations for P(chi^2)<FLOAT [0.01]"
			 end

			 class Index
			 	include Bio::Command::Wrapper
			 	set_program Bio::Ngs::Utils.binary("bcftools")
			 	set_sub_program "index"
			 end

			 class Cat
			 	include Bio::Command::Wrapper
			 	set_program Bio::Ngs::Utils.binary("bcftools")
			 	set_sub_program "cat"
			 end

			 class Ld
			 	include Bio::Command::Wrapper
			 	set_program Bio::Ngs::Utils.binary("bcftools")
			 	set_sub_program "ld"
			 end

			 class Ldpair
			 	include Bio::Command::Wrapper
			 	set_program Bio::Ngs::Utils.binary("bcftools")
			 	set_sub_program "ldpair"
			 end
		end
	end
end